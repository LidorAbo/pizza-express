apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.fluentd.name }}
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.fluentd.name }}
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.fluentd.name }}
roleRef:
  kind: ClusterRole
  name: {{ .Values.fluentd.name }}
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: {{ .Values.fluentd.name }}
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.fluentd.name }}
  namespace: kube-system
  labels:
    k8s-app: "{{ .Values.fluentd.name }}-logging"
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
    selector:
      matchLabels:
        k8s-app: "{{ .Values.fluentd.name }}-logging"
    template:
      metadata:
        labels:
          k8s-app: "{{ .Values.fluentd.name }}-logging"
          version: v1
          kubernetes.io/cluster-service: "true"
      spec:
        serviceAccount: {{ .Values.fluentd.name }}
        serviceAccountName: {{ .Values.fluentd.name }}
        tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        containers:
        - name: {{ .Values.fluentd.name }}
          image: "fluent/{{ .Values.fluentd.name }}-kubernetes-daemonset:v1.3-debian-elasticsearch"
          env:
          - name: FLUENT_ELASTICSEARCH_HOST
            value: "{{  .Values.elasticsearch.name  }}.{{ .Values.elasticsearch.namespace  }}"
          - name: FLUENT_ELASTICSEARCH_PORT
            value: {{ .Values.elasticsearch.port | quote }}
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          - name: FLUENT_UID
            value: "0"
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: "/var/log"
            - name: varlibdockercontainers
              mountPath: "/var/lib/docker/containers"
              readOnly: true
        terminationGracePeriodSeconds: 30
        volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers